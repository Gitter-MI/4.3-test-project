Player ends up at the front of the queue too often?
Stack overflow loop?


Sometimes the destination floor of the sprites is reset to -1 even though they are simply requesting a positive int as new destination
-> appears to be an edge case only in the test scenario where the destination floor for the sprite is being reset to -1 without changing the target room or position, which otherwise always happens

Sprites do not always enter when door is open right in front of them(?): appears to be a short wait
-> It looks like sprite should it enter but it doesn't.

Maybe create a failsafe function:
    if sprite is first in queue
    and sprite is waiting for the elevator or entering the elevator
    and elevator is at the pick-up floor 
    and elevator is ready (doors open)
    
    but sprite is not in transit and elevator is not in transit within 0.25 seconds then 
    -> force the transit state for both
    -> proceed with processing the queue
    



It is possible for the AI sprites to move out of the bounds of the floors 
    because the valus are not adjusted in the current test setting
------------------------------------------------

!!!!!!!!! Important !!!!!!!!!!!!!!
Added defer input false to request skippable:
    func _on_elevator_ready(incoming_sprite_name: String, request_id: int):   
    #print("-----------PLAYER-----------")
    #print("ready signal received!")
    #print("ready signal request id: ", request_id)
    #print("sprite data request id: ", sprite_data_new.elevator_request_id)       
    if incoming_sprite_name != sprite_data_new.sprite_name:
        return
        
    if request_id != sprite_data_new.elevator_request_id:
        SignalBus.request_skippable.emit(sprite_data_new.sprite_name, sprite_data_new.elevator_request_id)
        return           
    
        
    if sprite_data_new.elevator_state != sprite_data_new.ElevatorState.WAITING_FOR_ELEVATOR:    
        # print("sprite state is not waiting for elevator")
        SignalBus.request_skippable.emit(sprite_data_new.sprite_name, sprite_data_new.elevator_request_id)
        sprite_data_new.defer_input = false
        return
    # print("sprite_data_new.elevator_ready = true")        
    sprite_data_new.elevator_ready = true
    sprite_data_new.defer_input = true
    ---------------------------------------------


Shuffling elevator queue for sprite:AI_SPRITE
maybe it's working as expected, it's just that the 'AI' is completely random

- it appears the function is called at the wrong moment?
- when in elevator room the process is not properly stopped, looks like the timer is still running
- shuffle doesn't work. but it's getting called
- sprite is not being moved to the back when returning


- it appears it is changing the destination floor # solved: was set to random
- on click elevator room the sprites are moving to a random floor?  # solved was set to random



- When the sprite issues a new request for the elevator room while in front of the queue, then we don't want to reshuffle
- We call reshuffle when the request_id of the sprite is -1. # solved - do not reset the elevator request in pathfinder


add the room logic: 
    - in state manager of the sprite, cabin or in player's on entered elevator function


#################

implement the room state thing:
    Remember to defer inputs when entering and exiting rooms
    Example: _on_elevator_ready    

add more sprites to find out if shuffle really works as expected
    Double check the:
        - shuffle
        - timer
        - queue order
        - crazy clicks
        - elevator on same floor
        - elevator on other floor
        - waiting and walking away
        - waiting and entering: if another sprite is already waiting

find any other bug that could be in the way: 7



otherwise: 
    Congrats! You are closer than ever. 
